{"prompt":"CREATE TABLE Address\n\n###\n\n","completion":" create table [saleslt].[address](\n\t[addressid] [int] identity(1,1) not for replication not null,\n\t[addressline1] [nvarchar](60) not null,\n\t[addressline2] [nvarchar](60) null,\n\t[city] [nvarchar](30) not null,\n\t[stateprovince] [dbo].[name] not null,\n\t[countryregion] [dbo].[name] not null,\n\t[postalcode] [nvarchar](15) not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nalter table [saleslt].[address] add  constraint [pk_address_addressid] primary key clustered \n(\n\t[addressid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[address] add  constraint [ak_address_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset ansi_padding on\ngo\ncreate nonclustered index [ix_address_addressline1_addressline2_city_stateprovince_postalcode_countryregion] on [saleslt].[address]\n(\n\t[addressline1] asc,\n\t[addressline2] asc,\n\t[city] asc,\n\t[stateprovince] asc,\n\t[postalcode] asc,\n\t[countryregion] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, drop_existing = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset ansi_padding on\ngo\ncreate nonclustered index [ix_address_stateprovince] on [saleslt].[address]\n(\n\t[stateprovince] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, drop_existing = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[address] add  constraint [df_address_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[address] add  constraint [df_address_modifieddate]  default (getdate()) for [modifieddate]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key for address records.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'addressid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'first street address line.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'addressline1'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'second street address line.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'addressline2'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'name of the city.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'city'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'name of state or province.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'stateprovince'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'postal code for the street address.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'postalcode'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'rowguidcol number uniquely identifying the record. used to support a merge replication sample.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'constraint',@level2name=n'df_address_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'constraint',@level2name=n'df_address_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'constraint',@level2name=n'pk_address_addressid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'constraint',@level2name=n'ak_address_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'nonclustered index.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'index',@level2name=n'ix_address_addressline1_addressline2_city_stateprovince_postalcode_countryregion'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'nonclustered index.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address', @level2type=n'index',@level2name=n'ix_address_stateprovince'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'street address information for customers.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'address'\ngo\n+++"}
{"prompt":"CREATE TABLE Customer\n\n###\n\n","completion":" \ncreate table [saleslt].[customer](\n\t[customerid] [int] identity(1,1) not for replication not null,\n\t[namestyle] [dbo].[namestyle] not null,\n\t[title] [nvarchar](8) null,\n\t[firstname] [dbo].[name] not null,\n\t[middlename] [dbo].[name] null,\n\t[lastname] [dbo].[name] not null,\n\t[suffix] [nvarchar](10) null,\n\t[companyname] [nvarchar](128) null,\n\t[salesperson] [nvarchar](256) null,\n\t[emailaddress] [nvarchar](50) null,\n\t[phone] [dbo].[phone] null,\n\t[passwordhash] [varchar](128) not null,\n\t[passwordsalt] [varchar](10) not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nalter table [saleslt].[customer] add  constraint [pk_customer_customerid] primary key clustered \n(\n\t[customerid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[customer] add  constraint [ak_customer_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset ansi_padding on\ngo\ncreate nonclustered index [ix_customer_emailaddress] on [saleslt].[customer]\n(\n\t[emailaddress] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, drop_existing = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[customer] add  constraint [df_customer_namestyle]  default ((0)) for [namestyle]\ngo\nalter table [saleslt].[customer] add  constraint [df_customer_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[customer] add  constraint [df_customer_modifieddate]  default (getdate()) for [modifieddate]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key for customer records.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'customerid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'0 = the data in firstname and lastname are stored in western style (first name, last name) order.  1 = eastern style (last name, first name) order.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'namestyle'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of 0' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'constraint',@level2name=n'df_customer_namestyle'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'a courtesy title. for example, mr. or ms.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'title'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'first name of the person.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'firstname'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'middle name or middle initial of the person.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'middlename'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'last name of the person.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'lastname'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'surname suffix. for example, sr. or jr.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'suffix'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'the customer''s organization.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'companyname'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'the customer''s sales person, an employee of adventureworks cycles.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'salesperson'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'e-mail address for the person.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'emailaddress'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'phone number associated with the person.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'phone'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'password for the e-mail account.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'passwordhash'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'random value concatenated with the password string before the password is hashed.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'passwordsalt'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'rowguidcol number uniquely identifying the record. used to support a merge replication sample.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'constraint',@level2name=n'df_customer_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'constraint',@level2name=n'df_customer_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'constraint',@level2name=n'pk_customer_customerid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'constraint',@level2name=n'ak_customer_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'nonclustered index.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer', @level2type=n'index',@level2name=n'ix_customer_emailaddress'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'customer information.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customer'\ngo\n+++"}
{"prompt":"CREATE TABLE CustomerAddress\n\n###\n\n","completion":" \ncreate table [saleslt].[customeraddress](\n\t[customerid] [int] not null,\n\t[addressid] [int] not null,\n\t[addresstype] [dbo].[name] not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nalter table [saleslt].[customeraddress] add  constraint [pk_customeraddress_customerid_addressid] primary key clustered \n(\n\t[customerid] asc,\n\t[addressid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[customeraddress] add  constraint [ak_customeraddress_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[customeraddress] add  constraint [df_customeraddress_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[customeraddress] add  constraint [df_customeraddress_modifieddate]  default (getdate()) for [modifieddate]\ngo\nalter table [saleslt].[customeraddress]  with check add  constraint [fk_customeraddress_address_addressid] foreign key([addressid])\nreferences [saleslt].[address] ([addressid])\ngo\nalter table [saleslt].[customeraddress] check constraint [fk_customeraddress_address_addressid]\ngo\nalter table [saleslt].[customeraddress]  with check add  constraint [fk_customeraddress_customer_customerid] foreign key([customerid])\nreferences [saleslt].[customer] ([customerid])\ngo\nalter table [saleslt].[customeraddress] check constraint [fk_customeraddress_customer_customerid]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key. foreign key to customer.customerid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'column',@level2name=n'customerid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key. foreign key to address.addressid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'column',@level2name=n'addressid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'the kind of address. one of: archive, billing, home, main office, primary, shipping' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'column',@level2name=n'addresstype'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'rowguidcol number uniquely identifying the record. used to support a merge replication sample.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'column',@level2name=n'rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'constraint',@level2name=n'df_customeraddress_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'constraint',@level2name=n'pk_customeraddress_customerid_addressid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'constraint',@level2name=n'ak_customeraddress_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'cross-reference table mapping customers to their address(es).' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'foreign key constraint referencing address.addressid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'constraint',@level2name=n'fk_customeraddress_address_addressid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'foreign key constraint referencing customer.customerid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'customeraddress', @level2type=n'constraint',@level2name=n'fk_customeraddress_customer_customerid'\ngo\n+++"}
{"prompt":"CREATE TABLE ProductCategory\n\n###\n\n","completion":" \ncreate table [saleslt].[productcategory](\n\t[productcategoryid] [int] identity(1,1) not null,\n\t[parentproductcategoryid] [int] null,\n\t[name] [dbo].[name] not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nalter table [saleslt].[productcategory] add  constraint [pk_productcategory_productcategoryid] primary key clustered \n(\n\t[productcategoryid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset ansi_padding on\ngo\nalter table [saleslt].[productcategory] add  constraint [ak_productcategory_name] unique nonclustered \n(\n\t[name] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productcategory] add  constraint [ak_productcategory_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productcategory] add  constraint [df_productcategory_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[productcategory] add  constraint [df_productcategory_modifieddate]  default (getdate()) for [modifieddate]\ngo\nalter table [saleslt].[productcategory]  with check add  constraint [fk_productcategory_productcategory_parentproductcategoryid_productcategoryid] foreign key([parentproductcategoryid])\nreferences [saleslt].[productcategory] ([productcategoryid])\ngo\nalter table [saleslt].[productcategory] check constraint [fk_productcategory_productcategory_parentproductcategoryid_productcategoryid]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key for productcategory records.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'column',@level2name=n'productcategoryid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'product category identification number of immediate ancestor category. foreign key to productcategory.productcategoryid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'column',@level2name=n'parentproductcategoryid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'category description.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'column',@level2name=n'name'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'rowguidcol number uniquely identifying the record. used to support a merge replication sample.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'column',@level2name=n'rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'df_productcategory_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'df_productcategory_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'pk_productcategory_productcategoryid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'ak_productcategory_name'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'ak_productcategory_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'high-level product categorization.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'foreign key constraint referencing productcategory.productcategoryid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productcategory', @level2type=n'constraint',@level2name=n'fk_productcategory_productcategory_parentproductcategoryid_productcategoryid'\ngo\n+++"}
{"prompt":"CREATE TABLE ProductDescription\n\n###\n\n","completion":" \ncreate table [saleslt].[productdescription](\n\t[productdescriptionid] [int] identity(1,1) not null,\n\t[description] [nvarchar](400) not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nalter table [saleslt].[productdescription] add  constraint [pk_productdescription_productdescriptionid] primary key clustered \n(\n\t[productdescriptionid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productdescription] add  constraint [ak_productdescription_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productdescription] add  constraint [df_productdescription_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[productdescription] add  constraint [df_productdescription_modifieddate]  default (getdate()) for [modifieddate]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key for productdescription records.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'column',@level2name=n'productdescriptionid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'description of the product.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'column',@level2name=n'description'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'rowguidcol number uniquely identifying the record. used to support a merge replication sample.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'column',@level2name=n'rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'constraint',@level2name=n'df_productdescription_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'constraint',@level2name=n'df_productdescription_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'constraint',@level2name=n'pk_productdescription_productdescriptionid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription', @level2type=n'constraint',@level2name=n'ak_productdescription_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'product descriptions in several languages.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productdescription'\ngo\n+++"}
{"prompt":"CREATE TABLE ProductModel\n\n###\n\n","completion":" set ansi_nulls on\ngo\nset quoted_identifier on\ngo\ncreate table [saleslt].[productmodel](\n\t[productmodelid] [int] identity(1,1) not null,\n\t[name] [dbo].[name] not null,\n\t[catalogdescription] [xml](content [saleslt].[productdescriptionschemacollection]) null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary] textimage_on [primary]\ngo\nalter table [saleslt].[productmodel] add  constraint [pk_productmodel_productmodelid] primary key clustered \n(\n\t[productmodelid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset ansi_padding on\ngo\nalter table [saleslt].[productmodel] add  constraint [ak_productmodel_name] unique nonclustered \n(\n\t[name] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productmodel] add  constraint [ak_productmodel_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nset arithabort on\nset concat_null_yields_null on\nset quoted_identifier on\nset ansi_nulls on\nset ansi_padding on\nset ansi_warnings on\nset numeric_roundabort off\ngo\ncreate primary xml index [pxml_productmodel_catalogdescription] on [saleslt].[productmodel]\n(\n\t[catalogdescription]\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, drop_existing = off, online = off, allow_row_locks = on, allow_page_locks = on)\ngo\nalter table [saleslt].[productmodel] add  constraint [df_productmodel_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[productmodel] add  constraint [df_productmodel_modifieddate]  default (getdate()) for [modifieddate]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of newid()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodel', @level2type=n'constraint',@level2name=n'df_productmodel_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodel', @level2type=n'constraint',@level2name=n'df_productmodel_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodel', @level2type=n'constraint',@level2name=n'pk_productmodel_productmodelid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodel', @level2type=n'constraint',@level2name=n'ak_productmodel_name'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodel', @level2type=n'constraint',@level2name=n'ak_productmodel_rowguid'\ngo\n+++"}
{"prompt":"CREATE TABLE ProductModelProductDescription\n\n###\n\n","completion":" set ansi_nulls on\ngo\nset quoted_identifier on\ngo\ncreate table [saleslt].[productmodelproductdescription](\n\t[productmodelid] [int] not null,\n\t[productdescriptionid] [int] not null,\n\t[culture] [nchar](6) not null,\n\t[rowguid] [uniqueidentifier] rowguidcol  not null,\n\t[modifieddate] [datetime] not null\n) on [primary]\ngo\nset ansi_padding on\ngo\nalter table [saleslt].[productmodelproductdescription] add  constraint [pk_productmodelproductdescription_productmodelid_productdescriptionid_culture] primary key clustered \n(\n\t[productmodelid] asc,\n\t[productdescriptionid] asc,\n\t[culture] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productmodelproductdescription] add  constraint [ak_productmodelproductdescription_rowguid] unique nonclustered \n(\n\t[rowguid] asc\n)with (pad_index = off, statistics_norecompute = off, sort_in_tempdb = off, ignore_dup_key = off, online = off, allow_row_locks = on, allow_page_locks = on) on [primary]\ngo\nalter table [saleslt].[productmodelproductdescription] add  constraint [df_productmodelproductdescription_rowguid]  default (newid()) for [rowguid]\ngo\nalter table [saleslt].[productmodelproductdescription] add  constraint [df_productmodelproductdescription_modifieddate]  default (getdate()) for [modifieddate]\ngo\nalter table [saleslt].[productmodelproductdescription]  with check add  constraint [fk_productmodelproductdescription_productdescription_productdescriptionid] foreign key([productdescriptionid])\nreferences [saleslt].[productdescription] ([productdescriptionid])\ngo\nalter table [saleslt].[productmodelproductdescription] check constraint [fk_productmodelproductdescription_productdescription_productdescriptionid]\ngo\nalter table [saleslt].[productmodelproductdescription]  with check add  constraint [fk_productmodelproductdescription_productmodel_productmodelid] foreign key([productmodelid])\nreferences [saleslt].[productmodel] ([productmodelid])\ngo\nalter table [saleslt].[productmodelproductdescription] check constraint [fk_productmodelproductdescription_productmodel_productmodelid]\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key. foreign key to productmodel.productmodelid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'column',@level2name=n'productmodelid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key. foreign key to productdescription.productdescriptionid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'column',@level2name=n'productdescriptionid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'the culture for which the description is written' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'column',@level2name=n'culture'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'date and time the record was last updated.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'column',@level2name=n'modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'default constraint value of getdate()' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'constraint',@level2name=n'df_productmodelproductdescription_modifieddate'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'primary key (clustered) constraint' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'constraint',@level2name=n'pk_productmodelproductdescription_productmodelid_productdescriptionid_culture'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'unique nonclustered constraint. used to support replication samples.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'constraint',@level2name=n'ak_productmodelproductdescription_rowguid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'cross-reference table mapping product descriptions and the language the description is written in.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'foreign key constraint referencing productdescription.productdescriptionid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'constraint',@level2name=n'fk_productmodelproductdescription_productdescription_productdescriptionid'\ngo\nexec sys.sp_addextendedproperty @name=n'ms_description', @value=n'foreign key constraint referencing productmodel.productmodelid.' , @level0type=n'schema',@level0name=n'saleslt', @level1type=n'table',@level1name=n'productmodelproductdescription', @level2type=n'constraint',@level2name=n'fk_productmodelproductdescription_productmodel_productmodelid'\ngo\n+++"}
{"prompt":"Show the first name and the email address of customer with CompanyName 'Bike World'\n\n###\n\n","completion":" select firstname, emailaddress\nfrom customer\nwhere companyname = 'bike world';+++"}
{"prompt":"Show the CompanyName for all customers with an address in City 'Dallas'.\n\n###\n\n","completion":" select companyname\nfrom customer c join customeraddress ca on c.customerid = ca.customerid\njoin address a on ca.addressid = a.addressid\nwhere city = 'dallas';+++"}
{"prompt":"How many items with ListPrice more than $1000 have been sold?\n\n###\n\n","completion":" select count(salesorderid) total\nfrom salesorderdetail s join product p on s.productid = p.productid\nwhere listprice > 1000;+++"}
{"prompt":"Give the CompanyName of those customers with orders over $100000.\n   Include the subtotal plus tax plus freight.\n\n###\n\n","completion":" select companyname\nfrom customer c join salesorderheader sh on c.customerid = sh.customerid\nwhere subtotal + taxamt + freight > 100000;+++"}
{"prompt":"Find the number of left racing socks ('Racing Socks, L') ordered by CompanyName 'Riding Cycles'\n\n###\n\n","completion":" select sum(orderqty) total\nfrom product p join salesorderdetail sd on p.productid = sd.productid\njoin salesorderheader sh on sd.salesorderid = sh.salesorderid\njoin customer c on sh.customerid = c.customerid\nwhere (name = 'racing socks, l') and (companyname = 'riding cycles');+++"}
{"prompt":"Show the SalesOrderID and the UnitPrice for every Single Item Order.\n\n###\n\n","completion":" with temp1 as (\n  select salesorderid, sum(orderqty) items\n  from salesorderdetail\n  group by salesorderid\n  having items = 1\n)\nselect salesorderid, unitprice\nfrom salesorderdetail\nwhere salesorderid in (select salesorderid from temp1);+++"}
{"prompt":"List the product name and the CompanyName for all Customers who ordered ProductModel 'Racing Socks'.\n\n###\n\n","completion":" select p.name, companyname\nfrom customer c join salesorderheader sh on c.customerid = sh.customerid\njoin salesorderdetail sd on sh.salesorderid = sd.salesorderid\njoin product p on sd.productid = p.productid\njoin productmodel pm on p.productmodelid = pm.productmodelid\nwhere pm.name = 'racing socks';+++"}
{"prompt":"Show the product description for culture 'fr' for product with ProductID 736.\n\n###\n\n","completion":" select description\nfrom product p join productmodel pm on p.productmodelid = pm.productmodelid\njoin productmodelproductdescription pmpd on pm.productmodelid = pmpd.productmodelid\njoin productdescription pd on pmpd.productdescriptionid = pd.productdescriptionid\nwhere (productid = 736) and (culture = 'fr');+++"}
{"prompt":"Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest.\n   For each order show the CompanyName and the SubTotal and the total weight of the order.\n\n###\n\n","completion":" select companyname, subtotal, sum(orderqty * weight) weight\nfrom salesorderheader sh join salesorderdetail sd on sh.salesorderid = sd.salesorderid\njoin product p on sd.productid = p.productid\njoin customer c on sh.customerid = c.customerid\ngroup by sh.salesorderid, companyname, subtotal\norder by subtotal desc;+++"}
{"prompt":"How many products in ProductCategory 'Cranksets' have been sold to an address in 'London'?\n\n###\n\n","completion":" select sum(orderqty) total\nfrom address a join salesorderheader sh on a.addressid = sh.billtoaddressid\njoin salesorderdetail sd on sh.salesorderid = sd.salesorderid\njoin product p on sd.productid = p.productid\njoin productcategory pc on p.productcategoryid = pc.productcategoryid\nwhere (city = 'london') and (pc.name = 'cranksets');+++"}
{"prompt":" For every customer with a 'Main Office' in Dallas show AddressLine1 of the 'Main Office' and AddressLine1 of the 'Shipping' address.\n   If there is no shipping address leave it blank.\n   Use one row per customer.\n\n###\n\n","completion":" select companyname,\n  max(case when addresstype = 'main office' then addressline1 else '' end) main_office,\n  max(case when addresstype = 'shipping' then addressline1 else '' end) shipping\nfrom customeraddress ca join address a on ca.addressid = a.addressid\njoin customer c on ca.customerid = c.customerid\nwhere city = 'dallas'\ngroup by companyname;+++"}
{"prompt":" For each order show the SalesOrderID and SubTotal calculated three ways:\n   A) From the SalesOrderHeader\n   B) Sum of OrderQty*UnitPrice\n   C) Sum of OrderQty*ListPrice\n\n###\n\n","completion":" with tempa as (\n  select salesorderid, subtotal a_total\n  from salesorderheader\n), tempb as (\n  select salesorderid, sum(orderqty * unitprice) b_total\n  from salesorderdetail\n  group by salesorderid\n), tempc as (\n  select salesorderid, sum(orderqty * listprice) c_total\n  from salesorderdetail sd join product p on sd.productid = p.productid\n  group by salesorderid\n)\nselect tempa.salesorderid, a_total, b_total, c_total\nfrom tempa join tempb on tempa.salesorderid = tempb.salesorderid\njoin tempc on tempb.salesorderid = tempc.salesorderid;+++"}
{"prompt":"Show the best selling item by value.\n\n###\n\n","completion":" select name, sum(orderqty * unitprice) total_value\nfrom salesorderdetail sd join product p on sd.productid = p.productid\ngroup by name\norder by total_value desc\nlimit 1;+++"}
{"prompt":"Show how many orders are in the following ranges (in $):\n   RANGE      Num Orders      Total Value\n   0-99\n   100-999\n   1000-9999\n   10000-\n\n###\n\n","completion":" with temp1 as (\n  select salesorderid, sum(orderqty * unitprice) order_total\n  from salesorderdetail\n  group by salesorderid\n), temp2 as (\n  select salesorderid, order_total, case\n    when order_total between 0 and 99 then '0-99'\n    when order_total between 100 and 999 then '100-999'\n    when order_total between 1000 and 9999 then '1000-9999'\n    when order_total >= 10000 then '10000-'\n    else 'error'\n    end as rng\n  from temp1\n)\nselect rng 'range', count(rng) 'num orders', sum(order_total) 'total value'\nfrom temp2\ngroup by rng;+++"}
{"prompt":"Identify the three most important cities.\n   Show the break down of top level product category against city.\n\n###\n\n","completion":" with temp1 as (\n  select city, sum(unitprice * orderqty) as total_sales\n  from salesorderdetail sd join salesorderheader sh on sd.salesorderid = sh.salesorderid\n  join address a on sh.shiptoaddressid = a.addressid\n  group by city\n  order by total_sales desc\n  limit 3\n)\nselect city, pc.name, sum(unitprice * orderqty) total_sales\nfrom salesorderdetail sd join salesorderheader sh on sd.salesorderid = sh.salesorderid\njoin address a on sh.shiptoaddressid = a.addressid\njoin product p on sd.productid = p.productid\njoin productcategory pc on p.productcategoryid = pc.productcategoryid\nwhere city in (select city from temp1)\ngroup by city, pc.name\norder by city, total_sales desc;+++"}
{"prompt":"List the SalesOrderNumber for the customers 'Good Toys' and 'Bike World'.\n\n###\n\n","completion":" select companyname, salesorderid\nfrom customer c left join salesorderheader sh on c.customerid = sh.customerid\nwhere companyname like '%good toys%' or companyname like '%bike world%';+++"}
{"prompt":"List the ProductName and the quantity of what was ordered by 'Futuristic Bikes'.\n\n###\n\n","completion":" select companyname, p.name, sum(sd.orderqty) qty\nfrom customer c join salesorderheader sh on c.customerid = sh.customerid\njoin salesorderdetail sd on sh.salesorderid = sd.salesorderid\njoin product p on sd.productid = p.productid\nwhere companyname like '%futuristic bikes%'\ngroup by companyname, p.name;+++"}
{"prompt":"List the name and addresses of companies containing the word 'Bike' (upper or lower case) and companies containing 'cycle' (upper or lower case).\n    Ensure that the 'bike's are listed before the 'cycles's.\n\n###\n\n","completion":" with temp1 as (\n  (select distinct(companyname), customerid, if(1, 'bike', '') tag\n  from customer\n  where companyname like '%bike%'\n  ) union all (\n  select distinct(companyname), customerid, if(1, 'cycle', '') tag\n  from customer\n  where companyname like '%cycle%')\n)\nselect companyname, tag, ca.addressid, addressline1, addressline2, city, stateprovince, postalcode\nfrom temp1 join customeraddress ca on temp1.customerid = ca.customerid\njoin address a on ca.addressid = a.addressid\norder by tag;+++"}
{"prompt":"Show the total order value for each CountryRegion.\n    List by value with the highest first.\n\n###\n\n","completion":" select countyregion, sum(subtotal) total\nfrom address a join salesorderheader sh on a.addressid = sh.shiptoaddressid\ngroup by countyregion;+++"}
{"prompt":"Find the best customer in each region.\n\n###\n\n","completion":" with temp1 as (\n  select countyregion, companyname, sum(subtotal) total,\n    rank() over (partition by countyregion order by total desc) rnk\n  from address a join salesorderheader sh on a.addressid = sh.shiptoaddressid\n  join customer c on sh.customerid = c.customerid\n  group by countyregion, companyname\n)\nselect countyregion, companyname, total\nfrom temp1\nwhere rnk = 1;+++"}
